[
    {
        "UpdateStageName": "Server Directory Creation",
        "UpdateSourcePlatform": "Windows",
        "UpdateSource": "CreateDirectory",
        "UpdateSourceArgs": "{{$FullBaseDir}}server"
    },
    {
        "UpdateStageName": "AppImage Directory Creation",
        "UpdateSourcePlatform": "Linux",
        "UpdateSource": "CreateDirectory",
        "UpdateSourceArgs": "{{$FullBaseDir}}appimage"
    },
    {
        "UpdateStageName": "Support Directory Creation",
        "UpdateSourcePlatform": "All",
        "UpdateSource": "CreateDirectory",
        "UpdateSourceArgs": "{{$FullBaseDir}}Support"
    },
    {
        "UpdateStageName": "OpenRA Combined Arms Download",
        "UpdateSourcePlatform": "Linux",
        "UpdateSource": "Executable",
        "UpdateSourceData": "/bin/bash",
		"UpdateSourceArgs": "-c \"cd openra/appimage && CURRENT_VERSION=$(wget -qO- https://api.github.com/repos/Inq8/CAmod/tags | jq -r '.[0].name') && wget -qO OpenRA.AppImage \\\"https://github.com/Inq8/CAmod/releases/download/${CURRENT_VERSION}/CombinedArms-${CURRENT_VERSION}-x86_64.AppImage\\\" && echo \\\"Combined Arms version $CURRENT_VERSION downloaded\\\"\""
        "UpdateSourceConditionSetting": "ServerBuild",
        "UpdateSourceConditionValue": "release",
        "SkipOnFailure": false
    },
    {
        "UpdateStageName": "OpenRA Download",
        "UpdateSourcePlatform": "Windows",
        "UpdateSource": "Executable",
        "UpdateSourceData": "powershell.exe",
		"UpdateSourceArgs": "-NoProfile -Command \"$ProgressPreference='SilentlyContinue'; $CURRENT_VERSION=(Invoke-RestMethod -UseBasicParsing -Uri 'https://api.github.com/repos/Inq8/CAmod/tags')[0].name; $url=\\\"https://github.com/Inq8/CAmod/releases/download/$CURRENT_VERSION/CombinedArms-$CURRENT_VERSION-x64-winportable.zip\\\"; Invoke-WebRequest -UseBasicParsing -Uri $url -OutFile 'OpenRA.zip'; if ($?) { Write-Output \\\"Combined Arms version $CURRENT_VERSION downloaded\\\" }\""
        "UpdateSourceConditionSetting": "ServerBuild",
        "UpdateSourceConditionValue": "release",
        "SkipOnFailure": false
    },
    {
        "UpdateStageName": "OpenRA Combined Arms Download",
        "UpdateSourcePlatform": "Linux",
        "UpdateSource": "Executable",
        "UpdateSourceData": "/bin/bash",
        "UpdateSourceArgs": "-c \"cd openra/appimage && CURRENT_VERSION=$(wget -qO- https://api.github.com/repos/Inq8/CAmod/tags | jq -r '.[0].name') && wget -qO OpenRA.AppImage \\\"https://github.com/Inq8/CAmod/releases/download/${CURRENT_VERSION}/CombinedArms-${CURRENT_VERSION}-x86_64.AppImage\\\" && echo \\\"Combined Arms version $CURRENT_VERSION downloaded\\\"\""
        "UpdateSourceConditionSetting": "ServerBuild",
        "UpdateSourceConditionValue": "playtest",
        "SkipOnFailure": false
    },
    {
        "UpdateStageName": "OpenRA Download",
        "UpdateSourcePlatform": "Windows",
        "UpdateSource": "Executable",
        "UpdateSourceData": "powershell.exe",
        "UpdateSourceArgs": "-NoProfile -Command \"$ProgressPreference='SilentlyContinue'; $CURRENT_VERSION=(Invoke-RestMethod -UseBasicParsing -Uri 'https://api.github.com/repos/Inq8/CAmod/tags')[0].name; $url=\\\"https://github.com/Inq8/CAmod/releases/download/$CURRENT_VERSION/CombinedArms-$CURRENT_VERSION-x64-winportable.zip\\\"; Invoke-WebRequest -UseBasicParsing -Uri $url -OutFile 'OpenRA.zip'; if ($?) { Write-Output \\\"Combined Arms version $CURRENT_VERSION downloaded\\\" }\""
        "UpdateSourceConditionSetting": "ServerBuild",
        "UpdateSourceConditionValue": "playtest",
        "SkipOnFailure": false
    },
    {
        "UpdateStageName": "OpenRA Extract",
        "UpdateSourcePlatform": "Windows",
        "UpdateSource": "ExtractArchive",
        "UpdateSourceData": "OpenRA.zip",
        "UpdateSourceTarget": "{{$FullBaseDir}}server",
        "OverwriteExistingFiles": true,
        "DeleteAfterExtract": true
    },
    {
        "UpdateStageName": "OpenRA Combined Arms Extract",
        "UpdateSourcePlatform": "Linux",
        "UpdateSource": "Executable",
        "UpdateSourceData": "/bin/bash",
        "UpdateSourceArgs": "-c \"cd ./openra/appimage && chmod +x OpenRA.AppImage && ./OpenRA.AppImage --appimage-extract >/dev/null && rm -f OpenRA.AppImage\"",
        "SkipOnFailure": false
    },
    {
        "UpdateStageName": "AppImage Directory Symlink Creation",
        "UpdateSourcePlatform": "Linux",
        "UpdateSource": "Executable",
        "UpdateSourceData": "/bin/bash",
        "UpdateSourceArgs": "-c \"cd ./openra && rm -f server ; ln -s appimage/squashfs-root/usr/lib/openra server\"",
        "SkipOnFailure": false
    }
]